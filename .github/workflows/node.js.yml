# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code of the frontend/backend and run tests on both

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    - name: Install & Build Backend
      run: |
        cd backend
        npm ci
        npm run build --if-present
    - name: Backend Unit Tests
      run: |
        cd backend
        npx mocha -ui tdd tests/unitTests/**/*.js
    - name: Backend Intergration Tests
      run: |
        cd backend
        npx mocha -ui tdd tests/intergrationTests/**/*.js

  frontend:
    name: Frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
    
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: Install & Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build --if-present
    - name: Test Frontend
      run: |
        cd frontend
        npx mocha -ui tdd tests/*
